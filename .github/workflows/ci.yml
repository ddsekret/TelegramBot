name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-xdist pytest-cov flake8 black isort
      shell: powershell

    - name: Set PYTHONPATH
      run: |
        echo "PYTHONPATH=$PYTHONPATH;$env:GITHUB_WORKSPACE" >> $GITHUB_ENV
      shell: powershell

    - name: Lint with flake8
      run: |
        flake8 . --max-line-length=120
      shell: powershell

    - name: Auto-format with isort
      run: |
        isort .
      shell: powershell

    - name: Auto-format with black
      run: |
        black .
      shell: powershell

    - name: Commit formatting changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add .
        git diff-index --quiet HEAD || git commit -m "Auto-format code with black and isort"
        git push
      shell: powershell
      continue-on-error: true

    - name: Run tests with coverage
      run: |
        pytest --cache-clear test_parsing.py -n 2 --cov=parser --cov-report=xml
      shell: powershell

    - name: Upload test logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs
        path: parser.log

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml

    - name: Notify on failure
      if: failure()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
        channel-id: 'your-channel-id'  # Замените на ваш канал в Slack
        text: 'Tests failed in ${{ github.repository }}! Check the run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
