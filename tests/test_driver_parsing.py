import unittest
from parser import parse_driver_data

class TestDriverParsing(unittest.TestCase):
    def test_driver_1_gorshkov(self):
        text = (
            "Ф.И.О.: Горшков Александр Александрович\n"
            "Серия 17 16 номер 524327 выдан МРО УФМС России по Владимирской области в г. Владимире 28.12.2016 код подразделения 330-040\n"
            "Права: 33 33 497841\n"
            "Контактный телефон: 8-915-793-29-49\n"
            "Автомобиль: MERSEDES-BENZ К897УТ33\n"
            "Полуприцеп: АН657733"
        )
        data = parse_driver_data(text)
        self.assertEqual(data["Водитель"], "Горшков Александр Александрович")
        self.assertEqual(data["Паспорт_серия_и_номер"], "17 16 524327")
        self.assertEqual(data["Паспорт_место_выдачи"], "МРО УФМС России по Владимирской области в г. Владимире")
        self.assertEqual(data["Паспорт_дата_выдачи"], "28.12.2016")
        self.assertEqual(data["Паспорт_код_подразделения"], "330-040")
        self.assertEqual(data["ВУ_серия_и_номер"], "33 33 497841")
        self.assertEqual(data["Телефон"], "+7 (915) 793-29-49")
        self.assertEqual(data["Автомобиль"], "MERSEDES-BENZ К897УТ33")
        self.assertEqual(data["Прицеп"], "АН657733")

    def test_driver_2_atakishiev(self):
        text = (
            "Водитель: Атакишиев Алиаббас Маил Оглы\n"
            "паспорт 4713 431 628 выдан отделом УФМС России по Мурманской области в Октябрьском административном округе города Мурманска 07.02.2014 код подразделения 510-002\n"
            "машина volvo Р333Кв51\n"
            "прицеп Ак704251\n"
            "прописан Мурманск улица Старостина дом 3 квартира 56"
        )
        data = parse_driver_data(text)
        self.assertEqual(data["Водитель"], "Атакишиев Алиаббас Маил Оглы")
        self.assertEqual(data["Паспорт_серия_и_номер"], "4713 431 628")
        self.assertEqual(data["Паспорт_место_выдачи"], "отделом УФМС России по Мурманской области в Октябрьском административном округе города Мурманска")
        self.assertEqual(data["Паспорт_дата_выдачи"], "07.02.2014")
        self.assertEqual(data["Паспорт_код_подразделения"], "510-002")
        self.assertEqual(data["Автомобиль"], "volvo Р333Кв51")
        self.assertEqual(data["Прицеп"], "Ак704251")
        self.assertEqual(data["Адрес регистрации"], "Мурманск улица Старостина дом 3 квартира 56")

    def test_driver_3_yuzakov(self):
        text = (
            "Водитель: Южаков Дмитрий Андреевич\n"
            "Телефон: 89969639329\n"
            "Паспорт: 86 16 № 198505 выдан 28.03.2016 Отделом УФМС России по Республике Карелия в г. Петрозаводске\n"
            "Водительское удостоверение: 99 31849596\n"
            "а/м: Вольво Н 854 ЕН 10\n"
            "прицеп: ШМИТЦ АО 4927 10"
        )
        data = parse_driver_data(text)
        self.assertEqual(data["Водитель"], "Южаков Дмитрий Андреевич")
        self.assertEqual(data["Телефон"], "+7 (996) 963-93-29")
        self.assertEqual(data["Паспорт_серия_и_номер"], "86 16 198505")
        self.assertEqual(data["Паспорт_место_выдачи"], "Отделом УФМС России по Республике Карелия в г. Петрозаводске")
        self.assertEqual(data["Паспорт_дата_выдачи"], "28.03.2016")
        self.assertEqual(data["ВУ_серия_и_номер"], "99 31849596")
        self.assertEqual(data["Автомобиль"], "Вольво Н 854 ЕН 10")
        self.assertEqual(data["Прицеп"], "ШМИТЦ АО 4927 10")

    def test_driver_4_volkov(self):
        text = (
            "водитель: Волков Николай Петрович\n"
            "Паспорт: 20 09 118118 выдан Отделением УФМС России по Воронежской области\n"
            "Дата выдачи: 18.06.2009г.\n"
            "код подразделения 360-028\n"
            "Авто: Скания Н007ТМ 36\n"
            "п/п: Шмитц АУ0007 36\n"
            "№ телефона водителя: 89103443713"
        )
        data = parse_driver_data(text)
        self.assertEqual(data["Водитель"], "Волков Николай Петрович")
        self.assertEqual(data["Паспорт_серия_и_номер"], "20 09 118118")
        self.assertEqual(data["Паспорт_место_выдачи"], "Отделением УФМС России по Воронежской области")
        self.assertEqual(data["Паспорт_дата_выдачи"], "18.06.2009")
        self.assertEqual(data["Паспорт_код_подразделения"], "360-028")
        self.assertEqual(data["Автомобиль"], "Скания Н007ТМ 36")
        self.assertEqual(data["Прицеп"], "Шмитц АУ0007 36")
        self.assertEqual(data["Телефон"], "+7 (910) 344-37-13")

    def test_driver_5_turchaninov_1(self):
        text = (
            "водитель: Турчанинов Михаил Юрьевич\n"
            "тел.: 8-911-42-79-533\n"
            "Паспорт: 86 19 № 299124 выдан 22.05.2019 МВД по Республике Карелия\n"
            "ВУ: 1024744024\n"
            "а/м: Фотон Н 947 КО 10\n"
            "прицеп: ШМИТЦ АО 4927 10\n"
            "перевозчик: ИП Южаков"
        )
        data = parse_driver_data(text)
        self.assertEqual(data["Водитель"], "Турчанинов Михаил Юрьевич")
        self.assertEqual(data["Телефон"], "+7 (911) 427-95-33")
        self.assertEqual(data["Паспорт_серия_и_номер"], "86 19 299124")
        self.assertEqual(data["Паспорт_место_выдачи"], "МВД по Республике Карелия")
        self.assertEqual(data["Паспорт_дата_выдачи"], "22.05.2019")
        self.assertEqual(data["ВУ_серия_и_номер"], "1024744024")
        self.assertEqual(data["Автомобиль"], "Фотон Н 947 КО 10")
        self.assertEqual(data["Прицеп"], "ШМИТЦ АО 4927 10")
        self.assertEqual(data["Перевозчик"], "ИП Южаков")

    def test_driver_6_yasyukevich(self):
        text = (
            "Водитель: Ясюкевич Николай Михайлович\n"
            "Телефон: 8 911 410 53 73\n"
            "Паспорт: 86 04 № 687639 выдан 02.07.2004 ОВД Медвежьегорского р-на по Республике Карелия\n"
            "Водительское удостоверение: 99 28 312165\n"
            "а/м: Вольво № М 649 ОВ 10\n"
            "прицеп: АК 0928 10\n"
            "перевозчик: ИП Южаков"
        )
        data = parse_driver_data(text)
        self.assertEqual(data["Водитель"], "Ясюкевич Николай Михайлович")
        self.assertEqual(data["Телефон"], "+7 (911) 410-53-73")
        self.assertEqual(data["Паспорт_серия_и_номер"], "86 04 687639")
        self.assertEqual(data["Паспорт_место_выдачи"], "ОВД Медвежьегорского р-на по Республике Карелия")
        self.assertEqual(data["Паспорт_дата_выдачи"], "02.07.2004")
        self.assertEqual(data["ВУ_серия_и_номер"], "99 28 312165")
        self.assertEqual(data["Автомобиль"], "Вольво № М 649 ОВ 10")
        self.assertEqual(data["Прицеп"], "АК 0928 10")
        self.assertEqual(data["Перевозчик"], "ИП Южаков")

    def test_driver_7_zhbankov(self):
        text = (
            "водитель: Жбанков Владимир Сергеевич\n"
            "Телефон: 8921 5294056\n"
            "Паспорт: 86 15 № 194716 выдан 24.02.2016 ОУФМС по РК г. Медвежьегорск\n"
            "Водительское удостоверение: 10 28 368262\n"
            "а/м: Вольво М 881ОН 10\n"
            "прицеп: АО 2817 10\n"
            "перевозчик: ИП Южаков"
        )
        data = parse_driver_data(text)
        self.assertEqual(data["Водитель"], "Жбанков Владимир Сергеевич")
        self.assertEqual(data["Телефон"], "+7 (921) 529-40-56")
        self.assertEqual(data["Паспорт_серия_и_номер"], "86 15 194716")
        self.assertEqual(data["Паспорт_место_выдачи"], "ОУФМС по РК г. Медвежьегорск")
        self.assertEqual(data["Паспорт_дата_выдачи"], "24.02.2016")
        self.assertEqual(data["ВУ_серия_и_номер"], "10 28 368262")
        self.assertEqual(data["Автомобиль"], "Вольво М 881ОН 10")
        self.assertEqual(data["Прицеп"], "АО 2817 10")
        self.assertEqual(data["Перевозчик"], "ИП Южаков")

    def test_driver_8_petin(self):
        text = (
            "водитель: Петин Сергей Геннадьевич\n"
            "Паспорт: 8309 981436 выдан Отделом УФМС России по Кабардино-Балкарской Республике в Прохладненском р-не дата выдачи 22.12.2009 г. код подразделения 070-007\n"
            "Зарегистрирован: г. Санкт-Петербург, Красносельский р-он, ул. Пионерстроя, д. 7, кор. 2, лит. А, кв. 151\n"
            "Вод. Уд.: 9937 227397 дата выдачи 11.04.2024 г.\n"
            "Тел.: 8-931-299-98-02\n"
            "ВОЛЬВО С647НУ198 ШМИТЦ ЕА387478\n"
            "перевозчик: ИП Невинская Татьяна Леонидовна"
        )
        data = parse_driver_data(text)
        self.assertEqual(data["Водитель"], "Петин Сергей Геннадьевич")
        self.assertEqual(data["Паспорт_серия_и_номер"], "8309 981436")
        self.assertEqual(data["Паспорт_место_выдачи"], "Отделом УФМС России по Кабардино-Балкарской Республике в Прохладненском р-не")
        self.assertEqual(data["Паспорт_дата_выдачи"], "22.12.2009")
        self.assertEqual(data["Паспорт_код_подразделения"], "070-007")
        self.assertEqual(data["Адрес регистрации"], "г. Санкт-Петербург, Красносельский р-он, ул. Пионерстроя, д. 7, кор. 2, лит. А, кв. 151")
        self.assertEqual(data["ВУ_серия_и_номер"], "9937 227397")
        self.assertEqual(data["В/У_дата_срок"], "11.04.2024")
        self.assertEqual(data["Телефон"], "+7 (931) 299-98-02")
        self.assertEqual(data["Автомобиль"], "ВОЛЬВО С647НУ198")
        self.assertEqual(data["Прицеп"], "ШМИТЦ ЕА387478")
        self.assertEqual(data["Перевозчик"], "ИП Невинская Татьяна Леонидовна")

    def test_driver_9_gorshkov_2(self):
        text = (
            "водитель: Горшков Александр Александрович\n"
            "Паспорт Серия 17 16 номер 524327 выдан МРО УФМС России по Владимирской области в г. Владимире 28.12.2016 код подразделения 330-040\n"
            "Права: 33 33 497841\n"
            "телефон: 8-915-793-29-49\n"
            "Автомобиль: MERSEDES-BENZ К897УТ33\n"
            "Полуприцеп: АН657733\n"
            "перевозчик: ИП Аксенов"
        )
        data = parse_driver_data(text)
        self.assertEqual(data["Водитель"], "Горшков Александр Александрович")
        self.assertEqual(data["Паспорт_серия_и_номер"], "17 16 524327")
        self.assertEqual(data["Паспорт_место_выдачи"], "МРО УФМС России по Владимирской области в г. Владимире")
        self.assertEqual(data["Паспорт_дата_выдачи"], "28.12.2016")
        self.assertEqual(data["Паспорт_код_подразделения"], "330-040")
        self.assertEqual(data["ВУ_серия_и_номер"], "33 33 497841")
        self.assertEqual(data["Телефон"], "+7 (915) 793-29-49")
        self.assertEqual(data["Автомобиль"], "MERSEDES-BENZ К897УТ33")
        self.assertEqual(data["Прицеп"], "АН657733")
        self.assertEqual(data["Перевозчик"], "ИП Аксенов")

    def test_driver_10_alekseenko(self):
        text = (
            "А/М – тягач (марка, гос.номер) : ДАФ В 394 РО750\n"
            "П/прицеп: ЕТ 1913 50\n"
            "Ф.И.О. водителя: Алексеенко Александр Юрьевич\n"
            "Данные водителя: 46 17 № 635097\n"
            "Кем выдан: ТП №2 ОУФМС России по Московской области по городскому округу Коломна 16.08.2017 г.\n"
            "Прописка: МО, г.Коломна , б-р 800-летия Коломны, д.11, кв.89\n"
            "Телефон водителя: 8(926) 7043136\n"
            "Вод.уд.: 9927 527275"
        )
        data = parse_driver_data(text)
        self.assertEqual(data["Автомобиль"], "ДАФ В 394 РО750")
        self.assertEqual(data["Прицеп"], "ЕТ 1913 50")
        self.assertEqual(data["Водитель"], "Алексеенко Александр Юрьевич")
        self.assertEqual(data["Паспорт_серия_и_номер"], "46 17 635097")
        self.assertEqual(data["Паспорт_место_выдачи"], "ТП №2 ОУФМС России по Московской области по городскому округу Коломна")
        self.assertEqual(data["Паспорт_дата_выдачи"], "16.08.2017")
        self.assertEqual(data["Адрес регистрации"], "МО, г.Коломна , б-р 800-летия Коломны, д.11, кв.89")
        self.assertEqual(data["Телефон"], "+7 (926) 704-31-36")
        self.assertEqual(data["ВУ_серия_и_номер"], "9927 527275")

if __name__ == '__main__':
    unittest.main(verbosity=2)